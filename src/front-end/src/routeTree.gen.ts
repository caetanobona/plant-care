/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardPlantsIndexImport } from './routes/dashboard/plants/index'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminPlantsIndexImport } from './routes/admin/plants/index'
import { Route as AdminUsersIdImport } from './routes/admin/users/$id'
import { Route as AdminPlantsIdImport } from './routes/admin/plants/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardPlantsIndexRoute = DashboardPlantsIndexImport.update({
  id: '/dashboard/plants/',
  path: '/dashboard/plants/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

const AdminPlantsIndexRoute = AdminPlantsIndexImport.update({
  id: '/admin/plants/',
  path: '/admin/plants/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIdRoute = AdminUsersIdImport.update({
  id: '/admin/users/$id',
  path: '/admin/users/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminPlantsIdRoute = AdminPlantsIdImport.update({
  id: '/admin/plants/$id',
  path: '/admin/plants/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/plants/$id': {
      id: '/admin/plants/$id'
      path: '/admin/plants/$id'
      fullPath: '/admin/plants/$id'
      preLoaderRoute: typeof AdminPlantsIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/$id': {
      id: '/admin/users/$id'
      path: '/admin/users/$id'
      fullPath: '/admin/users/$id'
      preLoaderRoute: typeof AdminUsersIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/plants/': {
      id: '/admin/plants/'
      path: '/admin/plants'
      fullPath: '/admin/plants'
      preLoaderRoute: typeof AdminPlantsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/plants/': {
      id: '/dashboard/plants/'
      path: '/dashboard/plants'
      fullPath: '/dashboard/plants'
      preLoaderRoute: typeof DashboardPlantsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/admin/plants/$id': typeof AdminPlantsIdRoute
  '/admin/users/$id': typeof AdminUsersIdRoute
  '/admin/plants': typeof AdminPlantsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/dashboard/plants': typeof DashboardPlantsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/admin/plants/$id': typeof AdminPlantsIdRoute
  '/admin/users/$id': typeof AdminUsersIdRoute
  '/admin/plants': typeof AdminPlantsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/dashboard/plants': typeof DashboardPlantsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/admin/plants/$id': typeof AdminPlantsIdRoute
  '/admin/users/$id': typeof AdminUsersIdRoute
  '/admin/plants/': typeof AdminPlantsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/dashboard/plants/': typeof DashboardPlantsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/admin/plants/$id'
    | '/admin/users/$id'
    | '/admin/plants'
    | '/admin/users'
    | '/dashboard/plants'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/admin/plants/$id'
    | '/admin/users/$id'
    | '/admin/plants'
    | '/admin/users'
    | '/dashboard/plants'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/admin/plants/$id'
    | '/admin/users/$id'
    | '/admin/plants/'
    | '/admin/users/'
    | '/dashboard/plants/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  AdminPlantsIdRoute: typeof AdminPlantsIdRoute
  AdminUsersIdRoute: typeof AdminUsersIdRoute
  AdminPlantsIndexRoute: typeof AdminPlantsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  DashboardPlantsIndexRoute: typeof DashboardPlantsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  AdminPlantsIdRoute: AdminPlantsIdRoute,
  AdminUsersIdRoute: AdminUsersIdRoute,
  AdminPlantsIndexRoute: AdminPlantsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  DashboardPlantsIndexRoute: DashboardPlantsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard/",
        "/admin/plants/$id",
        "/admin/users/$id",
        "/admin/plants/",
        "/admin/users/",
        "/dashboard/plants/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/admin/plants/$id": {
      "filePath": "admin/plants/$id.tsx"
    },
    "/admin/users/$id": {
      "filePath": "admin/users/$id.tsx"
    },
    "/admin/plants/": {
      "filePath": "admin/plants/index.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx"
    },
    "/dashboard/plants/": {
      "filePath": "dashboard/plants/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
